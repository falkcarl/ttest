[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "t-test practice and simulator",
    "section": "",
    "text": "#| standalone: true\n#| viewerHeight: 1000\n\n######################################################################\n## Copyright 2024 Carl F. Falk\n##\n## This program is free software: you can redistribute it and/or\n## modify it under the terms of the GNU General Public License as\n## published by the Free Software Foundation, either version 3 of\n## the License, or (at your option) any later version.\n##\n## This program is distributed in the hope that it will be useful,\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n## GNU General Public License for more details.\n## &lt;http://www.gnu.org/licenses/&gt;\n\nlibrary(shiny)\nlibrary(xtable)\n#library(knitr)\n#library(kableExtra)\nlibrary(effectsize)\n#library(report) # auto-generates APA-style report...\n#library(shinyjs) # not used\n#library(ggplot2) # not used\n\n# Define server logic\nserver &lt;- function(input, output, session) {\n  \n  # create dataset and descriptives\n  dat &lt;- eventReactive({input$newdat},{\n    Y1 &lt;- round(rnorm(input$pop1n, input$pop1mean, input$pop1sd),2)\n    Y2 &lt;- round(rnorm(input$pop2n, input$pop2mean, input$pop2sd),2)\n    Y &lt;- c(Y1,Y2)\n    X &lt;- c(rep(\"Group 1\", input$pop1n),rep(\"Group 2\", input$pop2n))\n    data &lt;- data.frame(X=X,Y=Y)\n    out &lt;- list(data = data,\n                Gnames = c(\"Group 1\",\"Group 2\"),\n                N1 = input$pop1n,\n                N2 = input$pop2n,\n                M1 = mean(Y1),\n                M2 = mean(Y2),\n                Med1 = median(Y1),\n                Med2 = median(Y2),\n                SD1 = sd(Y1),\n                SD2 = sd(Y2),\n                Var1 = var(Y1),\n                Var2 = var(Y2)\n            )\n    out\n  })\n  \n  # display of raw data\n  output$rawData &lt;- renderDataTable({\n    data &lt;- dat()\n    data$data}\n  )\n  \n  # display of descriptive statistics\n  output$desc &lt;- function(){\n    d &lt;- dat()\n\n    #kableExtra::kable_styling(\n    #knitr::kable(data.frame(Group = d$Gnames,\n    #                 N = c(d$N1,d$N2),\n    #                 M = c(d$M1,d$M2),\n    #                 #Median = c(d$Med1, d$Med2),\n    #                 SD = c(d$SD1,d$SD2),\n    #                 Var = c(d$Var1, d$Var2)),\n    #      \"html\",\n    #      digits = 3),\n    #\"striped\", full_width=T)\n    print(xtable(data.frame(Group = d$Gnames,\n                     N = c(d$N1,d$N2),\n                     M = c(d$M1,d$M2),\n                     #Median = c(d$Med1, d$Med2),\n                     SD = c(d$SD1,d$SD2),\n                     Var = c(d$Var1, d$Var2)),\n           digits = 3),type=\"html\",\n          include.rownames=FALSE,\n          booktabs=TRUE)\n    \n  }\n  \n    # display results of t-test\n  output$results &lt;- renderPrint({\n    data &lt;- dat()\n    alpha &lt;- as.numeric(input$alpha)\n    \n    # df and critical t-value\n    df &lt;- nrow(data$data) - 2\n    t.crit &lt;- abs(qt(alpha/2, df=df))\n    \n    test &lt;- t.test(Y ~ X, data=data$data, var.equal=TRUE, conf.level=1-alpha)\n    \n    reject &lt;- test$p.value &lt; alpha\n    #out &lt;- report(t.test(Y ~ X, data = data$data, var.equal=TRUE))\n    \n    D &lt;- unname(test$estimate[1]-test$estimate[2])\n    pooledvar &lt;- (data$Var1*(data$N1-1)+data$Var2*(data$N2-1))/df\n    cohend &lt;- D/sqrt(pooledvar)\n    dsize &lt;- unname(interpret_cohens_d(cohend, rules=\"cohen1988\"))\n    \n    out &lt;- \"\"\n    out &lt;- paste0(out, \"alpha (two-tailed): \", input$alpha, \"\\n\")\n    out &lt;- paste0(out, \"degrees of freedom (df) = \", df,\"\\n\")\n    out &lt;- paste0(out, \"critical t = \", round(t.crit, digits=4), \"\\n\")    \n    out &lt;- paste0(out, \"difference (D; Group 1 - Group 2) = \", round(D, 4), \"\\n\")\n    out &lt;- paste0(out, \"estimated standard error = \", round(test$stderr,4), \"\\n\")    \n    out &lt;- paste0(out, \"obtained t = \", round(test$statistic, digits=4), \"\\n\")\n    out &lt;- paste0(out, \"reject H0? \", ifelse(reject, \"Yes\", \"No\"), \"\\n\")\n    \n    out &lt;- paste0(out, \"\\n\\n\")\n    out &lt;- paste0(out, \"Basic APA-style report\\n\\n\")\n    \n    group1diff &lt;- ifelse(D &gt; 0, \"higher\", \"lower\")\n    group1 &lt;- paste0(\"Group 1 (M = \", round(data$M1,2), \", SD = \", round(data$SD1,2), \")\" )\n    group2 &lt;- paste0(\"Group 2 (M = \", round(data$M2,2), \", SD = \", round(data$SD2,2), \")\" )\n    stats &lt;- paste0(\"t(\",df, \") = \", round(test$statistic, 2), \", p &lt; \", alpha,\n                    \", \", (1-alpha)*100, \"% CI[\",round(test$conf.int[1],2),\",\",round(test$conf.int[2],2),\"]\")\n    \n    if(reject){\n      out &lt;- paste0(out, group1, \" had significantly \", group1diff, \" scores in\ncomparison to \", group2, \", \", stats, \",\nwith a \", dsize, \" effect size, Cohen's d = \", round(cohend,2), \".\")\n    } else {\n      out &lt;- paste0(out, \"Although \", group1, \" tended to have \", group1diff, \" scores\nin comparison to \", group2, \", this difference was\nnot significant, \", stats, \",\nand had a \", dsize, \" effect size, Cohen's d = \", round(cohend,2), \".\")\n    }\n    cat(out)\n  })\n  \n  \n}\n\nui &lt;- fluidPage(\n\n    # Application title\n    #titlePanel(\"\"),\n\n    # Layout of UI\n    sidebarLayout(\n      sidebarPanel(strong(\"Population 1\"),\n                   sliderInput(\"pop1n\",\n                       \"Sample size (N):\",\n                       min = 3, max=15,\n                       value = 5, step=1),\n                   numericInput(\"pop1mean\",\n                       \"Mean:\",\n                       value = 5,\n                       step = .5),\n                   numericInput(\"pop1sd\",\n                       \"Standard Deviation:\",\n                       value = 1,\n                       step = .1,\n                       min = .1),\n                   br(),\n                   br(),\n                   strong(\"Population 2\"),\n                   sliderInput(\"pop2n\",\n                       \"Sample size (N):\",\n                       min = 3, max=15,\n                       value = 5, step=1),                   \n                   numericInput(\"pop2mean\",\n                       \"Mean:\",\n                       value = 5,\n                       step = .5),\n                   numericInput(\"pop2sd\",\n                       \"Standard Deviation:\",\n                       value = 1,\n                       step = .1,\n                       min = .1),\n                   actionButton(\"newdat\",\n                        \"Generate New Dataset\"),\n                   br(),\n                   br(),\n                   strong(\"Analysis options\"),\n                   selectInput(\"alpha\",\n                               label = \"alpha (two-tailed):\",\n                               choices = c(.05,.005,.01,.02, .1, .2, .3, .4, .5)\n                   )\n      ),\n      # Main Panel\n      mainPanel(\n          tabsetPanel(\n            tabPanel(\"Raw Data\",\n                     dataTableOutput(\"rawData\")\n            ),\n            tabPanel(\"Descriptive Stats\",\n                     tableOutput(\"desc\")\n            ),\n            tabPanel(\"Results\",\n                     verbatimTextOutput(\"results\")                     \n            )#,\n            #tabPanel(\"Visualization\"\n            #)\n          )\n      )\n    ) # end sidebarLayout\n)\n\nshinyApp(ui = ui, server = server)"
  }
]